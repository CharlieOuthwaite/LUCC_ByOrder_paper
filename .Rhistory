load(file = paste0(inDir, "MaxAnomalyModelRich_nontrop.rdata"))
BackTransformCentreredPredictor(transformedX = 0.31, originalX = trop$StdTmeanAnomaly) # 0.31 gives about 1
# what is the rescaled value of SCA of 0
BackTransformCentreredPredictor(transformedX = -1.45, originalX = trop$StdTmeanAnomaly) # -1.45 gives about 0
# these values might not be close enough to 1 or 0, and are leading to mismatches in the values in Predictions and the values on the plot
# reference is primary with 0 climate change so have 0 for that row
data_tab <- expand.grid(LUI = c("Primary vegetation", "Secondary vegetation", "Agriculture_Low", "Agriculture_High","Primary vegetation","Secondary vegetation", "Agriculture_Low", "Agriculture_High"),
Order = c("Coleoptera","Hymenoptera","Lepidoptera"),
LogAbund = 0,
Species_richness = 0)
# add column with SCA, values repeating 5 times
StdTmeanAnomalyRS = rep(c(-1.45,-1.45,-1.45,-1.45,0.31,0.31,0.31,0.31),times=3)
# add SCA to the data_tab
data_tab<-cbind(data_tab,StdTmeanAnomalyRS)
# factor the LU info
data_tab$LUI <- factor(data_tab$LUI, levels = levels(predictsSites$LUI))
## Abundance, Tropical ##
# predict results
result.ab.trop <- PredictGLMER(model = MeanAnomalyModelAbund_trop$model, data = data_tab, se.fit = TRUE, seMultiplier = 1.96)
# backtransform
result.ab.trop <- exp(result.ab.trop)-0.01
# add in the LU info
result.ab.trop$LUI <- data_tab$LUI
# add in the Order info
result.ab.trop$Order <- data_tab$Order
# break into Orders
Order<- paste0("",result.ab.trop$Order)
list.result.ab.trop <- split(result.ab.trop,Order)
list2env(list.result.ab.trop,globalenv())
# express as a percentage of primary
Coleoptera$perc <- ((Coleoptera$y/Coleoptera$y[1]) * 100) - 100
Hymenoptera$perc <- ((Hymenoptera$y/Hymenoptera$y[1]) * 100) - 100
Lepidoptera$perc <- ((Lepidoptera$y/Lepidoptera$y[1]) * 100) - 100
# put it back together
result.ab.trop <- rbind(Coleoptera,Hymenoptera,Lepidoptera)
# add in SCA vals
result.ab.trop$SCA <- rep(c(0,0,0,0,1, 1, 1, 1),times=3)
# add zone factor
result.ab.trop$Zone <- as.factor("Tropical")
## Species Richness, Tropical ##
# predict the results
result.sr.trop <- PredictGLMER(model = MeanAnomalyModelRich_trop$model, data = data_tab, se.fit = TRUE, seMultiplier = 1.96)
# backtransform
result.sr.trop <- exp(result.sr.trop)
# add in the LU info
result.sr.trop$LUI <- data_tab$LUI
# add in the Order info
result.sr.trop$Order <- data_tab$Order
# break into Orders
Order<- paste0("",result.sr.trop$Order)
list.result.sr.trop <- split(result.sr.trop,Order)
list2env(list.result.sr.trop,globalenv())
# express as a percentage of primary
Coleoptera$perc <- ((Coleoptera$y/Coleoptera$y[1]) * 100) - 100
Hymenoptera$perc <- ((Hymenoptera$y/Hymenoptera$y[1]) * 100) - 100
Lepidoptera$perc <- ((Lepidoptera$y/Lepidoptera$y[1]) * 100) - 100
# put it back together
result.sr.trop <- rbind(Coleoptera,Hymenoptera,Lepidoptera)
# add in SCA vals
result.sr.trop$SCA <- rep(c(0,0,0,0,1, 1, 1, 1),times=3)
# add zone factor
result.sr.trop$Zone <- as.factor("Tropical")
## Mean Anomaly, NonTrop ##
#create matrix for predictions
# SCA = 1
# abun and richness = 0
# what is the rescaled value of SCA of 1
BackTransformCentreredPredictor(transformedX = 2.4, originalX = nontrop$StdTmeanAnomaly) # 2.4 gives about 1
# what is the rescaled value of SCA of 0
BackTransformCentreredPredictor(transformedX = -1.9, originalX = nontrop$StdTmeanAnomaly) # -1.9 gives about 0
# these values might not be close enough to 1 or 0, and are leading to mismatches in the values in Predictions and the values on the plot
# reference is primary with 0 climate change so have 0 for that row
data_tab <- expand.grid(LUI = c("Primary vegetation", "Secondary vegetation", "Agriculture_Low", "Agriculture_High","Primary vegetation","Secondary vegetation", "Agriculture_Low", "Agriculture_High"),
Order = c("Coleoptera","Hymenoptera","Lepidoptera"),
LogAbund = 0,
Species_richness = 0)
# add column with SCA, values repeating 5 times
StdTmeanAnomalyRS = rep(c(-1.9,-1.9,-1.9,-1.9,2.4,2.4,2.4,2.4),times=3)
# add SCA to the data_tab
data_tab<-cbind(data_tab,StdTmeanAnomalyRS)
# factor the LU info
data_tab$LUI <- factor(data_tab$LUI, levels = levels(predictsSites$LUI))
## Abundance, NonTropical ##
# predict results
result.ab.nontrop <- PredictGLMER(model = MeanAnomalyModelAbund_nontrop$model, data = data_tab, se.fit = TRUE, seMultiplier = 1.96)
# backtransform
result.ab.nontrop <- exp(result.ab.nontrop)-0.01
# add in the LU info
result.ab.nontrop$LUI <- data_tab$LUI
# add in the Order info
result.ab.nontrop$Order <- data_tab$Order
# break into Orders
Order<- paste0("",result.ab.nontrop$Order)
list.result.ab.nontrop <- split(result.ab.nontrop,Order)
list2env(list.result.ab.nontrop,globalenv())
# express as a percentage of primary
Coleoptera$perc <- ((Coleoptera$y/Coleoptera$y[1]) * 100) - 100
Hymenoptera$perc <- ((Hymenoptera$y/Hymenoptera$y[1]) * 100) - 100
Lepidoptera$perc <- ((Lepidoptera$y/Lepidoptera$y[1]) * 100) - 100
# put it back together
result.ab.nontrop <- rbind(Coleoptera,Hymenoptera,Lepidoptera)
# add in SCA vals
result.ab.nontrop$SCA <- rep(c(0,0,0,0,1, 1, 1, 1),times=3)
# add zone factor
result.ab.nontrop$Zone <- as.factor("NonTropical")
## Species Richness, NonTropical ##
# predict the results
result.sr.nontrop <- PredictGLMER(model = MeanAnomalyModelRich_nontrop$model, data = data_tab, se.fit = TRUE, seMultiplier = 1.96)
# backtransform
result.sr.nontrop <- exp(result.sr.nontrop)
# add in the LU info
result.sr.nontrop$LUI <- data_tab$LUI
# add in the Order info
result.sr.nontrop$Order <- data_tab$Order
# break into Orders
Order<- paste0("",result.sr.nontrop$Order)
list.result.sr.nontrop <- split(result.sr.nontrop,Order)
list2env(list.result.sr.nontrop,globalenv())
# express as a percentage of primary
Coleoptera$perc <- ((Coleoptera$y/Coleoptera$y[1]) * 100) - 100
Hymenoptera$perc <- ((Hymenoptera$y/Hymenoptera$y[1]) * 100) - 100
Lepidoptera$perc <- ((Lepidoptera$y/Lepidoptera$y[1]) * 100) - 100
# put it back together
result.sr.nontrop <- rbind(Coleoptera,Hymenoptera,Lepidoptera)
# add in SCA vals
result.sr.nontrop$SCA <- rep(c(0,0,0,0,1, 1, 1, 1),times=3)
# add zone factor
result.sr.nontrop$Zone <- as.factor("NonTropical")
# combine results into a table for saving
all_res <- rbind(result.ab.nontrop, result.ab.trop, result.sr.nontrop, result.sr.trop)
all_res$measure <- c(rep("ab", 48), rep("sr", 48))
# save as png
LUI_CC_Predictions_MeanAnom_Realms <- all_res %>% gt()
gtsave(LUI_CC_Predictions_MeanAnom_Realms, "LUI_CC_Predictions_MeanAnom_Realms.png", path = outDir)
# save table as csv
write.csv(all_res, file = paste0(outDir,"LUI_CC_Predictions_MeanAnom_Realms.csv"))
# set directories
inDir <- "C:/Users/Kyra/Documents/GitHub/LUCC_ByOrder_paper/4_PREDICTSMatchClimateIndex/"
outDir <- "C:/Users/Kyra/Documents/GitHub/LUCC_ByOrder_paper/5_RunLUIClimateModels/"
plotDir <- "C:/Users/Kyra/Documents/GitHub/LUCC_ByOrder_paper/5_RunLUIClimateModels/Plots/"
tabDir <- "C:/Users/Kyra/Documents/GitHub/LUCC_ByOrder_paper/5_RunLUIClimateModels/Tables/"
if(!dir.exists(outDir)) dir.create(outDir)
if(!dir.exists(plotDir)) dir.create(plotDir)
if(!dir.exists(tabDir)) dir.create(tabDir)
# load libraries
packages_model <- c("devtools","StatisticalModels", "predictsFunctions","dplyr")
suppressWarnings(suppressMessages(lapply(packages_model, require, character.only = TRUE)))
packages_plot <- c("patchwork", "dplyr", "ggplot2", "cowplot", "sjPlot", "yarg", "lme4", "gt", "broom.mixed", "MASS")
suppressWarnings(suppressMessages(lapply(packages_plot, require, character.only = TRUE)))
# load models
predictsSites <- readRDS(file = paste0(outDir,"PREDICTSSitesClimate_Data.rds"))
load(paste0(outDir, "MeanAnomalyModelAbund.rdata"))
load(paste0(outDir, "MeanAnomalyModelRich.rdata"))
load(paste0(outDir, "MaxAnomalyModelAbund.rdata"))
load(paste0(outDir, "MaxAnomalyModelRich.rdata"))
tab_model(MeanAnomalyModelAbund$model, transform = NULL, file = paste0(outDir,"Tables/AbunMeanAnom_output_table.html"))
tab_model(MeanAnomalyModelAbund$model, transform = NULL, file = paste0(outDir,"Tables/AbunMeanAnom_output_table.jpeg"))
tab_model(MeanAnomalyModelAbund$model, transform = NULL, file = paste0(outDir,"Tables/AbunMeanAnom_output_table.png"))
install.packages(rvest)
install.packages("rvest")
library(rvest)
tab_model(MeanAnomalyModelRich$model, transform = NULL, file = paste0(outDir,"Tables/RichMeanAnom_output_table.html"))
tab_model(MaxAnomalyModelAbund$model, transform = NULL, file = paste0(outDir,"Tables/AbunMaxAnom_output_table.html"))
tab_model(MaxAnomalyModelRich$model, transform = NULL, file = paste0(outDir,"Tables/RichMaxAnom_output_table.html"))
predicstsSites <- readRDS("C:/Users/Kyra/Documents/GitHub/LUCC_ByOrder_paper/5_RunLUIClimateModels/PREDICTSSitesClimate_Data.rds")
model_data <- predictsSites[!is.na(predictsSites$StdTmeanAnomalyRS),]
tab_model(MeanAnomalyModelRich$model, transform = NULL, file = paste0(outDir,"Tables/RichMeanAnom_output_table.html"))
tab_model(MaxAnomalyModelRich$model, transform = NULL, file = paste0(outDir,"Tables/RichMaxAnom_output_table.html"))
# set up directories
dataDir <- "C:/Users/Kyra/Documents/GitHub/LUCC_ByOrder_paperData/"
outDir <- "C:/Users/Kyra/Documents/GitHub/LUCC_ByOrder_paper12_CheckColeoptera_Hymenoptera_Lepidoptera/"
# Load required libraries
packages <- c("predictsFunctions","patchwork", "dplyr", "tidyr", "ggplot", "yarg", "lme4", "gt", "broom.mixed", "MASS","webshot")
suppressWarnings(suppressMessages(lapply(packages, require, character.only = TRUE)))
# source in additional functions
source("C:/Users/Kyra/Documents/GitHub/LUCC_ByOrder_paper/0_Functions.R")
# Set the path to copy of the database
predicts.path <- paste0(dataDir,"database.rds")
# Read in the PREDICTS data
predicts <- ReadPREDICTS(predicts.path)
# set up directories
dataDir <- "C:/Users/Kyra/Documents/GitHub/LUCC_ByOrder_paper/Data/"
# Set the path to copy of the database
predicts.path <- paste0(dataDir,"database.rds")
# Read in the PREDICTS data
predicts <- ReadPREDICTS(predicts.path)
# Select only data for insects
predicts <- predicts[(predicts$Class=="Insecta"),]
predicts <- predicts %>% filter(Order %in% c("Coleoptera","Hymenoptera", "Lepidoptera")) %>% droplevels()
# Correct effort-sensitive abundance measures (assumes linear relationship between effort and recorded abundance)
predicts <- CorrectSamplingEffort(diversity = predicts)
# check diversity metrics
table(predicts$Diversity_metric)
# insects should not have diversity metric "percent cover", this is a mistake in the database
# remove those entries that are the problem
predicts <- predicts[!predicts$Diversity_metric == "percent cover", ]
# Merge sites that have the same coordinates, from the same study and same taxonomic family (e.g. multiple traps on a single transect)
predicts <- MergeSites(diversity = predicts)
# remove entries without Order
predicts <- droplevels(predicts[(predicts$Order!=""),])
# convert Order to a "factor"
predicts$Order <- as.factor(predicts$Order)
predicts$Family <- as.factor(predicts$Family)
# use split function to split the predicts data frame into 2 data frames (1/Order)
OrderName <- paste0("",predicts$Order)
by_Order <- split(predicts,OrderName)
# extract data frames from list into global environment
list2env(by_Order,globalenv())
# Calculate site metrics of diversity for each order, include extra columns:
Coleoptera <- droplevels(Coleoptera)
Coleoptera <- SiteMetrics(diversity = Coleoptera,
extra.cols = c("Predominant_land_use",
"SSB","SSBS", "Biome","Order","Family","Species"))
Hymenoptera <- droplevels(Hymenoptera)
Hymenoptera <- SiteMetrics(diversity = Hymenoptera,
extra.cols = c("Predominant_land_use",
"SSB","SSBS", "Biome","Order","Family","Species"))
Lepidoptera <- droplevels(Lepidoptera)
Lepidoptera <- SiteMetrics(diversity = Lepidoptera,
extra.cols = c("Predominant_land_use",
"SSB","SSBS", "Biome","Order","Family","Species"))
# merge all sites_Order data frames into one called "sites"
# merge using rbind()
sites <- rbind(Coleoptera,Hymenoptera,Lepidoptera)
# First, we will rearrange the land-use classification a bit
# rename "Predominant_land_use" to "LandUse"
sites$LandUse <- paste(sites$Predominant_land_use)
# Drop classification where land use could not be identified
sites$LandUse[(sites$LandUse=="Cannot decide")] <- NA
# drop classification where use intensity could not be identified
sites$Use_intensity[sites$Use_intensity=="Cannot decide"] <- NA
# Now make the variable a factor, and set the reference level to primary vegetation
sites$LandUse <- factor(sites$LandUse)
sites$LandUse <- relevel(sites$LandUse,ref="Primary vegetation")
# combine LandUse (LU) and Use Intensity (UI) into new variable Land Use Intensity (LUI)
sites$LUI <- paste0(sites$LandUse,'_',sites$Use_intensity)
sites$LUI[grep("NA",sites$LUI)] <- NA # where "NA" appears in the UI field, drop classification
# recode according to land use and use intensity combinations
sites$LUI <- dplyr::recode(sites$LUI,
'Primary vegetation_Minimal use' = 'Primary vegetation',
'Cropland_Light use' = 'Agriculture_High',
'Secondary vegetation (indeterminate age)_Minimal use' = 'Secondary vegetation',
'Urban_Light use' = 'Urban',
'Secondary vegetation (indeterminate age)_Light use' = 'Secondary vegetation',
'Cropland_Intense use' = 'Agriculture_High',
'Cropland_Minimal use' = 'Agriculture_Low',
'Pasture_Light use' = 'Agriculture_Low',
'Pasture_Minimal use' = 'Agriculture_Low',
'Intermediate secondary vegetation_Minimal use' = 'Secondary vegetation',
'Mature secondary vegetation_Minimal use' = 'Secondary vegetation',
'Secondary vegetation (indeterminate age)_Intense use' = 'Secondary vegetation',
'Pasture_Intense use' = 'Agriculture_High',
'Urban_Minimal use' = 'Urban',
'Primary vegetation_Light use' = 'Primary vegetation',
'Young secondary vegetation_Light use' = 'Secondary vegetation',
'Urban_Intense use' = 'Urban',
'Primary vegetation_Intense use' = 'Primary vegetation',
'Young secondary vegetation_Minimal use' = 'Secondary vegetation',
'Mature secondary vegetation_Intense use' = 'Secondary vegetation',
'Plantation forest_Minimal use' = 'Agriculture_Low',
'Plantation forest_Intense use' = 'Agriculture_High',
'Young secondary vegetation_Intense use' = 'Secondary vegetation',
'Plantation forest_Light use' = 'Agriculture_High',
'Mature secondary vegetation_Light use' = 'Secondary vegetation',
'Intermediate secondary vegetation_Intense use' = 'Secondary vegetation',
'Intermediate secondary vegetation_Light use' = 'Secondary vegetation')
# remove the urban sites and sites that are NA in LUI
sites <- sites[!sites$LUI == "Urban", ]
sites <- sites[!is.na(sites$LUI), ]
sites <- droplevels(sites)
# transform abundance values
sites$LogAbund <- log(sites$Total_abundance+1)
# Remove sites without coordinates
sites <- sites[!is.na(sites$Latitude), ]
# assign new variable for tropical/temperate, convert to factor, and filter out NA
sites$Realm <- ifelse(sites$Latitude >= -23.5 & sites$Latitude <= 23.5, "Tropical", "NonTropical")
sites$Realm <- factor(sites$Realm, levels = c("NonTropical", "Tropical"))
sites <- sites %>%
filter(!is.na(Realm))
# rename missing values in Family
sites <- sites %>% mutate_at(c('Family'), ~na_if(., ''))
sites$Family <- as.character(sites$Family)
sites$Family <- sites$Family %>% replace_na('Unspecified')
sites$Family <- as.factor(sites$Family)
### 3. Check Coleopteraa ###
#
# filter for just coleoptera
coleoptera <- sites[(sites$Order=="Coleoptera"),]
coleoptera_summary <- coleoptera %>%
group_by(Family) %>%
mutate(LogAbund = ifelse(is.na(LogAbund), 0, LogAbund)) %>% # replace NA values with 0 for ease of summarising
summarise(sites = length(Family),
studies = n_distinct(SS),
percent = 100*(length(Family)/nrow(coleoptera)),
species = n_distinct(Species),
sites_1 = length(LUI[LUI == "Primary vegetation"]) ,
studies_1 = n_distinct(SS[LUI == "Primary vegetation"]),
sites_2 = length(LUI[LUI == "Secondary vegetation"]),
studies_2 = n_distinct(SS[LUI == "Secondary vegetation"]),
sites_low = length(LUI[LUI == "Agriculture_Low"]),
studies_low = n_distinct(SS[LUI == "Agriculture_Low"]),
sites_high = length(LUI[LUI == "Agriculture_High"]),
studies_high = n_distinct(SS[LUI == "Agriculture_High"]),
Abundance = sum(LogAbund>0) ,
SpeciesRichness = sum(Species_richness>0)) %>%
ungroup() %>%
arrange(desc(sites))%>%
gt() %>%
tab_header(title = "Coleoptera summary"
) %>%
tab_spanner(
label = "Total",
columns = c(sites,studies,species,percent)
)  %>%
tab_spanner(
label = "Primary Vegetation",
columns = c(sites_1,studies_1)
) %>%
tab_spanner(
label = "Secondary vegetation",
columns = c(sites_2,studies_2)
) %>%
tab_spanner(
label = "Low-intensity agriculture",
columns = c(sites_low,studies_low)
) %>%
tab_spanner(
label = "High-intensity agriculture",
columns = c(sites_high,studies_high)
)  %>%
tab_spanner(
label = "Diversity Metric",
columns = c(Abundance,SpeciesRichness)
)  %>%
cols_align(
align = "center",
columns = c(Family,sites,studies,percent,species,sites_1,studies_1,sites_2,studies_2,sites_low,studies_low,sites_high,studies_high,Abundance,SpeciesRichness)
) %>%
cols_label(
Family = "Family",
sites = "Sites",
percent = "%",
species = "Species",
studies = "Studies",
sites_1 = "Sites",
studies_1 = "Studies",
sites_2 = "Sites",
studies_2 = "Studies",
sites_low = "Sites",
studies_low = "Studies",
sites_high = "Sites",
studies_high = "Studies",
Abundance = "Abundance",
SpeciesRichness = "Species richness"
)
# save table
gtsave(coleoptera_summary,"coleoptera_summary.png")
# save as csv
write.csv(coleoptera_summary,"coleoptera_summary.csv", row.names = TRUE)
outDir <- "C:/Users/Kyra/Documents/GitHub/LUCC_ByOrder_paper/12_CheckColeoptera_Hymenoptera_Lepidoptera/"
if(!dir.exists(outDir)) dir.create(outDir)
# save table
gtsave(coleoptera_summary,"coleoptera_summary.png")
# save as csv
write.csv(coleoptera_summary,"coleoptera_summary.csv", row.names = TRUE)
hymenoptera <- sites[(sites$Order=="Hymenoptera"),]
hymenoptera_summary <- hymenoptera %>%
group_by(Family) %>%
mutate(LogAbund = ifelse(is.na(LogAbund), 0, LogAbund)) %>% # replace NA values with 0 for ease of summarising
summarise(sites = length(Family),
studies = n_distinct(SS),
percent = 100*(length(Family)/nrow(hymenoptera)),
species = n_distinct(Species),
sites_1 = length(LUI[LUI == "Primary vegetation"]) ,
studies_1 = n_distinct(SS[LUI == "Primary vegetation"]),
sites_2 = length(LUI[LUI == "Secondary vegetation"]),
studies_2 = n_distinct(SS[LUI == "Secondary vegetation"]),
sites_low = length(LUI[LUI == "Agriculture_Low"]),
studies_low = n_distinct(SS[LUI == "Agriculture_Low"]),
sites_high = length(LUI[LUI == "Agriculture_High"]),
studies_high = n_distinct(SS[LUI == "Agriculture_High"]),
Abundance = sum(LogAbund>0) ,
SpeciesRichness = sum(Species_richness>0)) %>%
ungroup() %>%
arrange(desc(sites))%>%
gt() %>%
tab_header(title = "Hymenoptera summary"
) %>%
tab_spanner(
label = "Total",
columns = c(sites,studies,species,percent)
)  %>%
tab_spanner(
label = "Primary Vegetation",
columns = c(sites_1,studies_1)
) %>%
tab_spanner(
label = "Secondary vegetation",
columns = c(sites_2,studies_2)
) %>%
tab_spanner(
label = "Low-intensity agriculture",
columns = c(sites_low,studies_low)
) %>%
tab_spanner(
label = "High-intensity agriculture",
columns = c(sites_high,studies_high)
)  %>%
tab_spanner(
label = "Diversity Metric",
columns = c(Abundance,SpeciesRichness)
)  %>%
cols_align(
align = "center",
columns = c(Family,sites,studies,percent,species,sites_1,studies_1,sites_2,studies_2,sites_low,studies_low,sites_high,studies_high,Abundance,SpeciesRichness)
) %>%
cols_label(
Family = "Family",
sites = "Sites",
percent = "%",
species = "Species",
studies = "Studies",
sites_1 = "Sites",
studies_1 = "Studies",
sites_2 = "Sites",
studies_2 = "Studies",
sites_low = "Sites",
studies_low = "Studies",
sites_high = "Sites",
studies_high = "Studies",
Abundance = "Abundance",
SpeciesRichness = "Species richness"
)
# save table
gtsave(hymenoptera_summary,"hymenoptera_summary.png")
# save as csv
write.csv(hymenoptera_summary,"hymenoptera_summary.csv", row.names = TRUE)
# save table
gtsave(hymenoptera_summary,outDir,"hymenoptera_summary.png")
# filter for just lepidopterans
lepidoptera <- sites[(sites$Order=="Lepidoptera"),]
lepidoptera_summary <- lepidoptera %>%
group_by(Family) %>%
mutate(LogAbund = ifelse(is.na(LogAbund), 0, LogAbund)) %>% # replace NA values with 0 for ease of summarising
summarise(sites = length(Family),
studies = n_distinct(SS),
percent = 100*(length(Family)/nrow(lepidoptera)),
species = n_distinct(Species),
sites_1 = length(LUI[LUI == "Primary vegetation"]) ,
studies_1 = n_distinct(SS[LUI == "Primary vegetation"]),
sites_2 = length(LUI[LUI == "Secondary vegetation"]),
studies_2 = n_distinct(SS[LUI == "Secondary vegetation"]),
sites_low = length(LUI[LUI == "Agriculture_Low"]),
studies_low = n_distinct(SS[LUI == "Agriculture_Low"]),
sites_high = length(LUI[LUI == "Agriculture_High"]),
studies_high = n_distinct(SS[LUI == "Agriculture_High"]),
Abundance = sum(LogAbund>0) ,
SpeciesRichness = sum(Species_richness>0)) %>%
ungroup() %>%
arrange(desc(sites))%>%
gt() %>%
tab_header(title = "Lepidoptera summary"
) %>%
tab_spanner(
label = "Total",
columns = c(sites,studies,species,percent)
)  %>%
tab_spanner(
label = "Primary Vegetation",
columns = c(sites_1,studies_1)
) %>%
tab_spanner(
label = "Secondary vegetation",
columns = c(sites_2,studies_2)
) %>%
tab_spanner(
label = "Low-intensity agriculture",
columns = c(sites_low,studies_low)
) %>%
tab_spanner(
label = "High-intensity agriculture",
columns = c(sites_high,studies_high)
)  %>%
tab_spanner(
label = "Diversity Metric",
columns = c(Abundance,SpeciesRichness)
)  %>%
cols_align(
align = "center",
columns = c(Family,sites,studies,percent,species,sites_1,studies_1,sites_2,studies_2,sites_low,studies_low,sites_high,studies_high,Abundance,SpeciesRichness)
) %>%
cols_label(
Family = "Family",
sites = "Sites",
percent = "%",
species = "Species",
studies = "Studies",
sites_1 = "Sites",
studies_1 = "Studies",
sites_2 = "Sites",
studies_2 = "Studies",
sites_low = "Sites",
studies_low = "Studies",
sites_high = "Sites",
studies_high = "Studies",
Abundance = "Abundance",
SpeciesRichness = "Species richness"
)
# save table
gtsave(lepidoptera_summary,"lepidoptera_summary.png")
# save as csv
write.csv(lepidoptera_summary,"lepidoptera_summary.csv", row.names = TRUE)
